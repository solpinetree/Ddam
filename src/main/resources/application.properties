
# spring-jdbc 사용시 아래 datasource 정보 없으면 가동시 에러 발생
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/mydb811
#spring.datasource.username=myuser811
#spring.datasource.password=1234
spring.h2.console=true

spring.jpa.defer-datasource-initialization=true

# 개발단계에서는 작성한 화면을 서버내부에 보관(cache) 하지 않도록 설정해주는게 좋습니다
spring.thymeleaf.cache=false

# JPA에서 생성되는 SQL 문을 콘솔 출력
spring.jpa.show-sql=true

# 쿼리가 훨씬 보기 좋게 정렬되어 로그 찍힌다
spring.jpa.properties.hibernate.format_sql=true

# DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
# update  :  DB 테이블과 엔티티 매핑 정보를 비교해서 변경 사항만 수정 [ 테이블이 없을 경우 CREATE ] 

spring.jpa.hibernate.ddl-auto=create

#spring.security.user.name = user
#spring.security.user.password = 1234
#spring.security.user.roles=ADMIN,MANAGER,USER